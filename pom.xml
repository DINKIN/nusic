<?xml version="1.0" encoding="UTF-8"?>
<!--

    ï»¿Copyright (C) 2013 Johannes Schnatterer

    See the NOTICE file distributed with this work for additional
    information regarding copyright ownership.

    This file is part of nusic.

    nusic is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    nusic is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with nusic.  If not, see <http://www.gnu.org/licenses />.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>info.schnatterer.nusic</groupId>
	<artifactId>nusic-parent</artifactId>
	<version>2.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>nusic</name>

	<licenses>
		<license>
			<name>GNU General Public License 3.0</name>
			<url>http://www.gnu.org/copyleft/gpl.html</url>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:ssh://github.com/schnatterer/nusic.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/schnatterer/nusic.git</developerConnection>
		<url>https://github.com/schnatterer/nusic</url>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<!-- Application constants -->
		<project.website.url>https://github.com/schnatterer/nusic</project.website.url>

		<!-- Build properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<main.basedir>${project.basedir}</main.basedir>

		<!-- Maven Plugins -->
		<license-maven-plugin.version>2.11</license-maven-plugin.version>

		<!-- "Plain java" dependencies -->
		<slf4j.version>1.7.6</slf4j.version>

		<!-- Android-specific dependencies -->
		<android.api.level>23</android.api.level>
		<!-- Compatibility library for android API levels 4 and 7(Android 2.x) -->
		<android.compatibility.version>23.1.1</android.compatibility.version>
		<roboguice.version>3.0.1</roboguice.version>
	</properties>

	<repositories>
		<repository>
			<id>android</id>
			<url>file://${env.ANDROID_HOME}/extras/android/m2repository</url>
		</repository>
	</repositories>


	<modules>
		<module>nusic-util</module>
		<module>nusic-domain</module>
		<module>nusic-data-api</module>
		<module>nusic-data-android</module>
		<module>nusic-core-api</module>
		<module>nusic-core-android</module>
		<module>nusic-ui-android</module>
		<module>nusic-apk</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- Android-specific dependencies -->
			<dependency>
				<!-- Before building make sure to copy the android JARs to your local 
					repo using the mave-android-sdk-deployer: https://github.com/mosabua/maven-android-sdk-deployer -->
				<groupId>android</groupId>
				<artifactId>android</artifactId>
				<version>6.0_r2</version>
				<scope>provided</scope>
			</dependency>
			<!-- Android Support libs -->
			<dependency>
				<artifactId>support-v4</artifactId>
				<groupId>com.android.support</groupId>
				<version>${android.compatibility.version}</version>
				<type>aar</type>
			</dependency>
			<dependency>
				<!-- Include appcompat for API lvl 4 and 7, as well as backport of material 
					design -->
				<groupId>com.android.support</groupId>
				<artifactId>design</artifactId>
				<version>${android.compatibility.version}</version>
				<type>aar</type>
			</dependency>
			<!-- Roboguice -->
			<dependency>
				<groupId>org.roboguice</groupId>
				<artifactId>roboguice</artifactId>
				<version>${roboguice.version}</version>
			</dependency>
			<dependency>
				<groupId>org.roboguice</groupId>
				<artifactId>roboblender</artifactId>
				<version>${roboguice.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Robolectric -->
			<dependency>
				<!-- TODO Find out which APIs are really needed and add only those? -->
				<groupId>org.robolectric</groupId>
				<artifactId>android-all</artifactId>
				<version>5.0.0_r2-robolectric-1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.robolectric</groupId>
				<artifactId>robolectric</artifactId>
				<version>2.4</version>
				<scope>test</scope>
			</dependency>
			<!-- logback-android -->
			<dependency>
				<!-- Process log statements produced by dependencies via slf4j with logback -->
				<groupId>com.github.tony19</groupId>
				<artifactId>logback-android-classic</artifactId>
				<version>1.1.1-3</version>
				<exclusions>
					<exclusion>
						<artifactId>android</artifactId>
						<groupId>com.google.android</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- "Plain java" dependencies -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.10.19</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>com.simpligility.maven.plugins</groupId>
					<artifactId>android-maven-plugin</artifactId>
					<version>4.2.1</version>
				</plugin>

			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!-- Make our tags look like e.g. "v.1.0.1" -->
					<tagNameFormat>v.@{project.version}</tagNameFormat>
					<!-- Same version to all submodules -->
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<!-- Increase version code and update version name in android manifest 
						and commit all changes, i.e. not only the changes to POMs made by release 
						plugin but also the androidManifest.xml -->
					<completionGoals>com.jayway.maven.plugins.android.generation2:android-maven-plugin:3.8.2:manifest-update
						scm:checkin -Dmessage="[maven-release-plugin] prepare for next
						development iteration" -DworkingDirectory=.
						-Dandroid.manifest.versionCodeAutoIncrement=true
						-Dandroid.manifest.versionName="@string/versionName"</completionGoals>
					<!-- Don't deploy -->
					<goals>install</goals>
				</configuration>
			</plugin>
			<plugin>
				<!-- Check for missing license headers in files. Licenses can be added 
					by calling "mvn license:format" -->
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${license-maven-plugin.version}</version>
				<configuration>
					<header>${main.basedir}/resources/GPL-3.txt</header>
					<properties>
						<project.inceptionYear>2013</project.inceptionYear>
						<owner>Johannes Schnatterer</owner>
					</properties>
					<excludes>
						<!-- relase plugin changes this files, so exclude them from license 
							checks. -->
						<exclude>**/pom.xml</exclude>
						<exclude>**/AndroidManifest.xml</exclude>
						<!-- Other files -->
						<exclude>TODO.md</exclude>
						<exclude>LICENSE.txt</exclude>
						<exclude>**/bin/**</exclude>
						<exclude>**/gen/**</exclude>
						<exclude>**/*.svg</exclude>
						<exclude>**/proguard.cfg</exclude>
						<exclude>**/privacyPolicy.html</exclude>
						<exclude>**/project.properties</exclude>
						<exclude>**/lint.xml</exclude>
						<exclude>src/main/java/roboguice/activity/RoboAppCompatPreferenceActivity.java</exclude>
						<exclude>src/main/java/com/google/**</exclude>
					</excludes>
				</configuration>
				<dependencies>
					<!-- Use information from git for old files -->
					<dependency>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin-git</artifactId>
						<!-- make sure to use the same version as license-maven-plugin -->
						<version>${license-maven-plugin.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<!-- Check for missing licenses in validate phase. Fail if none. -->
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- prepare jacoco agent for code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>