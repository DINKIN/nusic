apply plugin: "com.android.library"

android {
    compileSdkVersion nusicCompileSdkVersion
    buildToolsVersion nusicBuildToolsVersion

    defaultConfig {
        minSdkVersion nusicMinSdkVersion
        targetSdkVersion nusictTargetSdkVersion
        versionCode nusicVersionCode
        versionName project.version
    }

    compileOptions {
        encoding nusicSourceEncoding
        sourceCompatibility nusicSourceCompatibility
        targetCompatibility nusicTargetCompatibility
    }

    // Use the standard java convention
    //sourceSets {
    //   androidTest.setRoot('src/test')
    //}
}

sonarqube {
    properties {
        // See https://github.com/SonarSource/sonar-examples/blob/master/projects/languages/android/android-sonarqube-gradle/app/build.gradle
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "."
        property "sonar.exclusions", "build/**,**/*.png"
        property "sonar.import_unknown_files", true
        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"
        // These are the defaults applied to each java project. Try to apply to this android project
        /*
        property "sonar.sourceEncoding", project.compileOptions.sourceCompatibility
        property "sonar.java.source", project.android.sourceCompatibility
        property "sonar.java.target", project.compileOptions.targetCompatibility
        property "sonar.sources", 	sourceSets.main.allSource.srcDirs
        property "sonar.tests", sourceSets.test.allSource.srcDirs
        property "sonar.java.binaries", sourceSets.main.runtimeClasspath
        property "sonar.binaries", sourceSets.main.runtimeClasspath
        property "sonar.java.libraries", sourceSets.main.runtimeClasspath
        property "sonar.libraries", sourceSets.main.runtimeClasspath
        property "sonar.java.test.binaries", sourceSets.test.runtimeClasspath
        property "sonar.java.test.libraries", sourceSets.test.runtimeClasspath
        property "sonar.surefire.reportsPath", test.testResultsDir
        property "sonar.junit.reportsPath",test.testResultsDir
        */
    }
}

// TODO resource filtering: MD files, assets, constants
// TODO privacy Policy (wagon plugin?)
// TODO MD generation (MD plugin?)

dependencies {
    // Nusic modules
    compile(
            project(":nusic-data-api"),
            project(":nusic-core-api"),
            project(":nusic-util")
    )

    // External dependencies
    compile(
            "com.nostra13.universalimageloader:universal-image-loader:1.9.2",
            libraries.commonsIo,
            libraries.roboguice,
            libraries.slf4j,
            // An explicit log implementation is needed at compile time, because the log level is set by the app
            libraries.logback,
            libraries.androidDesign
    )
    // Enable annotation database to improve performance
    provided "org.roboguice:roboblender:3.0.1"

    // Test dependencies
    testCompile(
            libraries.junit,
            libraries.robolectric,
            libraries.robolectricAndroid
    )
}

project.tasks.withType(JavaCompile) { task ->
    logger.warn("Project name= ", project.name)
    /* This defines the class name of the annotation database, which is then generated by
     * roboblender annotation processor*/
    options.compilerArgs << "-AguiceAnnotationDatabasePackageName=${project.group}.annotation.nusicUiAndroid"
}
